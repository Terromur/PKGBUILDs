From 72415c3e2a12f73dc55199f06b6f4492f84fff4e Mon Sep 17 00:00:00 2001
From: Vasiliy Stelmachenok <ventureo@cachyos.org>
Date: Sun, 16 Feb 2025 17:15:21 +0300
Subject: [PATCH] Revert "server: Check for zero access in alloc_handle()."

This reverts commit 3c29dc1eb86cbe96697193cf679937362c817e02.

Signed-off-by: Vasiliy Stelmachenok <ventureo@cachyos.org>
---
 dlls/advapi32/tests/security.c   |   4 ++
 dlls/kernel32/tests/sync.c       |   4 +-
 dlls/ntdll/tests/om.c            | 117 ++++++++++++++++++-------------
 dlls/ntdll/tests/reg.c           |   2 +
 dlls/ntoskrnl.exe/tests/driver.c |   6 ++
 dlls/setupapi/tests/devinst.c    |   2 +
 server/device.c                  |   4 +-
 server/handle.c                  |   9 +--
 8 files changed, 90 insertions(+), 58 deletions(-)

diff --git a/dlls/advapi32/tests/security.c b/dlls/advapi32/tests/security.c
index 6e22ff7a0d8..4c02fb0b8e2 100644
--- a/dlls/advapi32/tests/security.c
+++ b/dlls/advapi32/tests/security.c
@@ -5679,7 +5679,9 @@ static void test_mutex_security(HANDLE token)
 
         SetLastError(0xdeadbeef);
         dup = OpenMutexA(0, FALSE, "WineTestMutex");
+        todo_wine
         ok(!dup, "OpenMutex should fail\n");
+        todo_wine
         ok(GetLastError() == ERROR_ACCESS_DENIED, "wrong error %lu\n", GetLastError());
     }
 
@@ -5734,7 +5736,9 @@ static void test_event_security(HANDLE token)
 
         SetLastError(0xdeadbeef);
         dup = OpenEventA(0, FALSE, "WineTestEvent");
+        todo_wine
         ok(!dup, "OpenEvent should fail\n");
+        todo_wine
         ok(GetLastError() == ERROR_ACCESS_DENIED, "wrong error %lu\n", GetLastError());
     }
 
diff --git a/dlls/kernel32/tests/sync.c b/dlls/kernel32/tests/sync.c
index 3d8af4befdf..2c69073db10 100644
--- a/dlls/kernel32/tests/sync.c
+++ b/dlls/kernel32/tests/sync.c
@@ -248,7 +248,9 @@ static void test_mutex(void)
 
     SetLastError(0xdeadbeef);
     hOpened = OpenMutexA(0, FALSE, "WineTestMutex");
+    todo_wine
     ok(hOpened == NULL, "OpenMutex succeeded\n");
+    todo_wine
     ok(GetLastError() == ERROR_ACCESS_DENIED, "wrong error %lu\n", GetLastError());
 
     SetLastError(0xdeadbeef);
@@ -287,7 +289,7 @@ static void test_mutex(void)
             if ((1 << i) == ACCESS_SYSTEM_SECURITY)
                 todo_wine ok(GetLastError() == ERROR_PRIVILEGE_NOT_HELD, "wrong error %lu, access %x\n", GetLastError(), 1 << i);
             else
-                ok(GetLastError() == ERROR_ACCESS_DENIED, "wrong error %lu, , access %x\n", GetLastError(), 1 << i);
+                todo_wine ok(GetLastError() == ERROR_ACCESS_DENIED, "wrong error %lu, , access %x\n", GetLastError(), 1 << i);
             ReleaseMutex(hCreated);
             failed |=0x1 << i;
         }
diff --git a/dlls/ntdll/tests/om.c b/dlls/ntdll/tests/om.c
index c3274de3570..2cbba6b15d4 100644
--- a/dlls/ntdll/tests/om.c
+++ b/dlls/ntdll/tests/om.c
@@ -30,7 +30,6 @@
 #include "winternl.h"
 #include "wingdi.h"
 #include "winuser.h"
-#include "winreg.h"
 #include "ddk/wdm.h"
 #include "wine/test.h"
 
@@ -3393,7 +3392,6 @@ static void test_zero_access(void)
     CLIENT_ID cid;
     HANDLE h1, h2;
     DWORD err;
-    HKEY key;
 
     size.QuadPart = 4096;
     timeout.QuadPart = -10000;
@@ -3412,15 +3410,18 @@ static void test_zero_access(void)
     ok( status == STATUS_OBJECT_NAME_EXISTS, "got %#lx.\n", status );
     CloseHandle( h2 );
     status = pNtCreateEvent( &h2, 0, &attr, NotificationEvent, FALSE );
-    ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    todo_wine ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    if (NT_SUCCESS(status)) CloseHandle( h2 );
     status = pNtOpenEvent( &h2, EVENT_ALL_ACCESS, &attr );
     ok( !status, "got %#lx.\n", status );
     CloseHandle( h2 );
     status = pNtOpenEvent( &h2, 0, &attr );
-    ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    todo_wine ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    if (NT_SUCCESS(status)) CloseHandle( h2 );
     InitializeObjectAttributes( &attr, &str, OBJ_INHERIT, 0, NULL );
     status = pNtOpenEvent( &h2, 0, &attr );
-    ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    todo_wine ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    if (NT_SUCCESS(status)) CloseHandle( h2 );
 
     status = pNtDuplicateObject( GetCurrentProcess(), h1, GetCurrentProcess(), &h2, 0, 0, 0 );
     ok( !status, "got %#lx.\n", status );
@@ -3442,9 +3443,11 @@ static void test_zero_access(void)
     ok( status == STATUS_OBJECT_NAME_EXISTS, "got %#lx.\n", status );
     CloseHandle( h2 );
     status = pNtCreateMutant( &h2, 0, &attr, FALSE );
-    ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    todo_wine ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    if (NT_SUCCESS(status)) CloseHandle( h2 );
     status = pNtOpenMutant( &h2, 0, &attr );
-    ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    todo_wine ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    if (NT_SUCCESS(status)) CloseHandle( h2 );
     CloseHandle( h1 );
 
     status = pNtCreateSemaphore( &h1, 0, &attr, 1, 2 );
@@ -3458,9 +3461,11 @@ static void test_zero_access(void)
     ok( status == STATUS_OBJECT_NAME_EXISTS, "got %#lx.\n", status );
     CloseHandle( h2 );
     status = pNtCreateSemaphore( &h2, 0, &attr, 1, 2 );
-    ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    todo_wine ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    if (NT_SUCCESS(status)) CloseHandle( h2 );
     status = pNtOpenSemaphore( &h2, 0, &attr );
-    ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    todo_wine ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    if (NT_SUCCESS(status)) CloseHandle( h2 );
     CloseHandle( h1 );
 
     status = pNtCreateKeyedEvent( &h1, 0, &attr, 0 );
@@ -3474,9 +3479,11 @@ static void test_zero_access(void)
     ok( status == STATUS_OBJECT_NAME_EXISTS, "got %#lx.\n", status );
     CloseHandle( h2 );
     status = pNtCreateKeyedEvent( &h2, 0, &attr, 0 );
-    ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    todo_wine ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    if (NT_SUCCESS(status)) CloseHandle( h2 );
     status = pNtOpenKeyedEvent( &h2, 0, &attr );
-    ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    todo_wine ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    if (NT_SUCCESS(status)) CloseHandle( h2 );
     CloseHandle( h1 );
 
     status = pNtCreateIoCompletion( &h1, 0, &attr, 0 );
@@ -3490,9 +3497,11 @@ static void test_zero_access(void)
     ok( status == STATUS_OBJECT_NAME_EXISTS, "got %#lx.\n", status );
     CloseHandle( h2 );
     status = pNtCreateIoCompletion( &h2, 0, &attr, 0 );
-    ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    todo_wine ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    if (NT_SUCCESS(status)) CloseHandle( h2 );
     status = pNtOpenIoCompletion( &h2, 0, &attr );
-    ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    todo_wine ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    if (NT_SUCCESS(status)) CloseHandle( h2 );
     CloseHandle( h1 );
 
     status = pNtCreateJobObject( &h1, 0, &attr );
@@ -3507,9 +3516,11 @@ static void test_zero_access(void)
         "got %#lx.\n", status );
     if (NT_SUCCESS(status)) CloseHandle( h2 );
     status = pNtCreateJobObject( &h2, 0, &attr );
-    ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    todo_wine ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    if (NT_SUCCESS(status)) CloseHandle( h2 );
     status = pNtOpenJobObject( &h2, 0, &attr );
-    ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    todo_wine ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    if (NT_SUCCESS(status)) CloseHandle( h2 );
     CloseHandle( h1 );
 
     status = pNtCreateDirectoryObject( &h1, 0, &attr );
@@ -3523,9 +3534,11 @@ static void test_zero_access(void)
     ok( status == STATUS_OBJECT_NAME_EXISTS, "got %#lx.\n", status );
     CloseHandle( h2 );
     status = pNtCreateDirectoryObject( &h2, 0, &attr );
-    ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    todo_wine ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    if (NT_SUCCESS(status)) CloseHandle( h2 );
     status = pNtOpenDirectoryObject( &h2, 0, &attr );
-    ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    todo_wine ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    if (NT_SUCCESS(status)) CloseHandle( h2 );
     CloseHandle( h1 );
 
     status = pNtCreateTimer( &h1, 0, &attr, NotificationTimer );
@@ -3539,9 +3552,11 @@ static void test_zero_access(void)
     ok( status == STATUS_OBJECT_NAME_EXISTS, "got %#lx.\n", status );
     CloseHandle( h2 );
     status = pNtCreateTimer( &h2, 0, &attr, NotificationTimer );
-    ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    todo_wine ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    if (NT_SUCCESS(status)) CloseHandle( h2 );
     status = pNtOpenTimer( &h2, 0, &attr );
-    ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    todo_wine ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    if (NT_SUCCESS(status)) CloseHandle( h2 );
     CloseHandle( h1 );
 
     status = pNtCreateSymbolicLinkObject( &h1, 0, &attr, &target );
@@ -3556,9 +3571,11 @@ static void test_zero_access(void)
         "got %#lx.\n", status );
     CloseHandle( h2 );
     status = pNtCreateSymbolicLinkObject( &h2, 0, &attr, &target );
-    ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    todo_wine ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    if (NT_SUCCESS(status)) CloseHandle( h2 );
     status = pNtOpenSymbolicLinkObject( &h2, 0, &attr );
-    ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    todo_wine ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    if (NT_SUCCESS(status)) CloseHandle( h2 );
     CloseHandle( h1 );
 
     status = pNtCreateSection( &h1, 0, &attr, &size, PAGE_READWRITE, SEC_COMMIT, 0 );
@@ -3572,9 +3589,11 @@ static void test_zero_access(void)
     ok( status == STATUS_OBJECT_NAME_EXISTS, "got %#lx.\n", status );
     CloseHandle( h2 );
     status = pNtCreateSection( &h2, 0, &attr, &size, PAGE_READWRITE, SEC_COMMIT, 0 );
-    ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    todo_wine ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    if (NT_SUCCESS(status)) CloseHandle( h2 );
     status = pNtOpenSection( &h2, 0, &attr );
-    ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    todo_wine ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    if (NT_SUCCESS(status)) CloseHandle( h2 );
     CloseHandle( h1 );
 
     status = pNtCreateDebugObject( &h1, 0, &attr, 0 );
@@ -3586,7 +3605,8 @@ static void test_zero_access(void)
     ok( status == STATUS_OBJECT_NAME_EXISTS, "got %#lx.\n", status );
     CloseHandle( h2 );
     status = pNtCreateDebugObject( &h2, 0, &attr, 0 );
-    ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    todo_wine ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    if (NT_SUCCESS(status)) CloseHandle( h2 );
     CloseHandle( h1 );
 
     pRtlInitUnicodeString( &str, L"\\Device\\Null" );
@@ -3596,7 +3616,8 @@ static void test_zero_access(void)
     CloseHandle( h1 );
     status = NtCreateFile( &h1, 0, &attr, &iosb, NULL, 0,
                            FILE_SHARE_READ | FILE_SHARE_WRITE, FILE_OPEN, 0, NULL, 0 );
-    ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    todo_wine ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    if (NT_SUCCESS(status)) CloseHandle( h1 );
 
     pRtlInitUnicodeString( &str, L"\\??\\c:\\windows\\system32\\ntdll.dll" );
     status = NtCreateFile( &h1, GENERIC_READ | SYNCHRONIZE, &attr, &iosb, NULL, 0,
@@ -3605,7 +3626,8 @@ static void test_zero_access(void)
     CloseHandle( h1 );
     status = NtCreateFile( &h1, 0, &attr, &iosb, NULL, 0,
                            FILE_SHARE_READ | FILE_SHARE_WRITE, FILE_OPEN, 0, NULL, 0 );
-    ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    todo_wine ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    if (NT_SUCCESS(status)) CloseHandle( h1 );
 
     pRtlInitUnicodeString( &str, L"\\Device\\MailSlot\\abc" );
     status = pNtCreateMailslotFile( &h1, 0, &attr, &iosb, 0, 0, 0, NULL );
@@ -3639,25 +3661,17 @@ static void test_zero_access(void)
 
     pRtlInitUnicodeString( &str, L"\\REGISTRY\\Machine" );
     status = pNtCreateKey( &h1, 0, &attr, 0, 0, 0, 0 );
-    ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    todo_wine ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    if (NT_SUCCESS(status)) CloseHandle( h1 );
     status = pNtCreateKey( &h1, KEY_READ, &attr, 0, 0, 0, 0 );
     ok( !status, "got %#lx.\n", status );
     CloseHandle( h1 );
     status = pNtOpenKey( &h1, KEY_READ, &attr );
     ok( !status, "got %#lx.\n", status );
     CloseHandle( h1 );
-    err = RegOpenKeyExW( HKEY_LOCAL_MACHINE, L"Software", 0, KEY_READ | KEY_WOW64_64KEY, &key);
-    ok( !err, "got %#lx.\n", status );
-    RegCloseKey( key );
-    err = RegOpenKeyExW( HKEY_LOCAL_MACHINE, L"Software", 0, KEY_READ | KEY_WOW64_32KEY, &key);
-    ok( !err, "got %#lx.\n", status );
-    RegCloseKey( key );
     status = pNtOpenKey( &h1, 0, &attr );
-    ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
-    err = RegOpenKeyExW( HKEY_LOCAL_MACHINE, L"Software", 0, KEY_WOW64_64KEY, &key);
-    ok( err == ERROR_ACCESS_DENIED, "got %#lx.\n", status );
-    err = RegOpenKeyExW( HKEY_LOCAL_MACHINE, L"Software", 0, KEY_WOW64_32KEY, &key);
-    ok( err == ERROR_ACCESS_DENIED, "got %#lx.\n", status );
+    todo_wine ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    if (NT_SUCCESS(status)) CloseHandle( h1 );
 
     pRtlInitUnicodeString( &str, L"\\REGISTRY\\Machine\\Software\\foobar-test" );
     status = pNtCreateKey( &h1, KEY_ALL_ACCESS, &attr, 0, 0, 0, 0 );
@@ -3680,22 +3694,26 @@ static void test_zero_access(void)
     ok( !status, "got %#lx.\n", status );
     CloseHandle( h1 );
     status = pNtOpenProcessToken( GetCurrentProcess(), 0, &h1 );
-    ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    todo_wine ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    if (NT_SUCCESS(status)) CloseHandle( h1 );
 
     status = NtGetNextThread(GetCurrentProcess(), NULL, 0, 0, 0, &h1);
-    ok( status == STATUS_NO_MORE_ENTRIES, "got %#lx.\n", status );
+    todo_wine ok( status == STATUS_NO_MORE_ENTRIES, "got %#lx.\n", status );
+    if (NT_SUCCESS(status)) CloseHandle( h1 );
 
     InitializeObjectAttributes( &attr, NULL, 0, 0, NULL );
     cid.UniqueProcess = ULongToHandle( GetCurrentProcessId() );
     cid.UniqueThread  = 0;
     status = pNtOpenProcess( &h1, 0, &attr, &cid );
-    ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    todo_wine ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    if (NT_SUCCESS(status)) CloseHandle( h1 );
 
     InitializeObjectAttributes( &attr, NULL, 0, 0, NULL );
     cid.UniqueProcess = 0;
     cid.UniqueThread  = ULongToHandle( GetCurrentThreadId() );
     status = pNtOpenThread( &h1, 0, &attr, &cid );
-    ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    todo_wine ok( status == STATUS_ACCESS_DENIED, "got %#lx.\n", status );
+    if (NT_SUCCESS(status)) CloseHandle( h1 );
 
     h1 = CreateWindowStationA( "WinSta0", 0, WINSTA_ALL_ACCESS, NULL );
     err = GetLastError();
@@ -3707,8 +3725,9 @@ static void test_zero_access(void)
         CloseWindowStation( h1 );
         h1 = CreateWindowStationA( "WinSta0", 0, 0, NULL );
         err = GetLastError();
-        ok( !h1, "CreateWindowStationA succeeded\n" );
-        ok( err == ERROR_ACCESS_DENIED, "CreateWindowStationA failed %lu\n", err );
+        todo_wine ok( !h1, "CreateWindowStationA succeeded\n" );
+        todo_wine ok( err == ERROR_ACCESS_DENIED, "CreateWindowStationA failed %lu\n", err );
+        if (h1) CloseWindowStation( h1 );
     }
     else if (err == ERROR_ACCESS_DENIED) win_skip( "Not enough privileges for CreateWindowStation\n" );
 
@@ -3717,8 +3736,9 @@ static void test_zero_access(void)
     CloseWindowStation( h1 );
     h1 = OpenWindowStationA( "WinSta0", TRUE, 0 );
     err = GetLastError();
-    ok( !h1, "OpenWindowStation succeeeded\n" );
-    ok( err == ERROR_ACCESS_DENIED, "OpenWindowStation failed %lu\n", err );
+    todo_wine ok( !h1, "OpenWindowStation succeeeded\n" );
+    todo_wine ok( err == ERROR_ACCESS_DENIED, "OpenWindowStation failed %lu\n", err );
+    if (h1) CloseWindowStation( h1 );
 
     h1 = CreateDesktopA( "default", NULL, NULL, 0, DESKTOP_ALL_ACCESS, NULL );
     ok( h1 != 0, "CreateDesktopA failed %lu\n", GetLastError() );
@@ -3726,8 +3746,9 @@ static void test_zero_access(void)
     SetLastError( 0xdeadbeef );
     h1 = CreateDesktopA( "default", NULL, NULL, 0, 0, NULL );
     err = GetLastError();
-    ok( !h1, "CreateDesktopA succeeded\n" );
-    ok( err == ERROR_ACCESS_DENIED, "CreateDesktopA failed %lu\n", err );
+    todo_wine ok( !h1, "CreateDesktopA succeeded\n" );
+    todo_wine ok( err == ERROR_ACCESS_DENIED, "CreateDesktopA failed %lu\n", err );
+    if (h1) CloseDesktop( h1 );
 
     h1 = OpenDesktopA( "default", 0, TRUE, DESKTOP_ALL_ACCESS );
     ok( h1 != 0, "OpenDesktopA failed %lu\n", GetLastError() );
diff --git a/dlls/ntdll/tests/reg.c b/dlls/ntdll/tests/reg.c
index 2760c1b4472..f264f42e98d 100644
--- a/dlls/ntdll/tests/reg.c
+++ b/dlls/ntdll/tests/reg.c
@@ -253,7 +253,9 @@ static void test_NtOpenKey(void)
     attr.Length = sizeof(attr);
     key = (HANDLE)0xdeadbeef;
     status = pNtOpenKey(&key, 0, &attr);
+    todo_wine
     ok(status == STATUS_ACCESS_DENIED, "Expected STATUS_ACCESS_DENIED, got: 0x%08lx\n", status);
+    todo_wine
     ok(!key, "key = %p\n", key);
     if (status == STATUS_SUCCESS) NtClose(key);
 
diff --git a/dlls/ntoskrnl.exe/tests/driver.c b/dlls/ntoskrnl.exe/tests/driver.c
index eec6f0bc10a..cc666a565d2 100644
--- a/dlls/ntoskrnl.exe/tests/driver.c
+++ b/dlls/ntoskrnl.exe/tests/driver.c
@@ -2294,15 +2294,19 @@ static void test_permanence(void)
     status = ZwOpenDirectoryObject( &handle, DIRECTORY_ALL_ACCESS, &attr );
     ok(!status, "got %#lx\n", status);
     status = ZwMakeTemporaryObject( handle );
+    todo_wine
     ok(!status, "got %#lx\n", status);
     status = ZwMakeTemporaryObject( handle );
+    todo_wine
     ok(!status, "got %#lx\n", status);
     status = ZwClose( handle );
     ok(!status, "got %#lx\n", status);
     status = ZwOpenDirectoryObject( &handle, 0, &attr );
+    todo_wine
     ok(status == STATUS_OBJECT_NAME_NOT_FOUND, "got %#lx\n", status);
 
     status = ZwCreateDirectoryObject( &handle, GENERIC_ALL, &attr );
+    todo_wine
     ok(!status, "got %#lx\n", status);
     attr.Attributes = OBJ_PERMANENT;
     status = ZwOpenDirectoryObject( &handle2, DIRECTORY_ALL_ACCESS, &attr );
@@ -2310,9 +2314,11 @@ static void test_permanence(void)
     status = ZwClose( handle2 );
     ok(!status, "got %#lx\n", status);
     status = ZwClose( handle );
+    todo_wine
     ok(!status, "got %#lx\n", status);
     attr.Attributes = 0;
     status = ZwOpenDirectoryObject( &handle, 0, &attr );
+    todo_wine
     ok(status == STATUS_OBJECT_NAME_NOT_FOUND, "got %#lx\n", status);
     if (!status) ZwClose( handle );
 }
diff --git a/dlls/setupapi/tests/devinst.c b/dlls/setupapi/tests/devinst.c
index 0c902ce783b..c5c0114b2b7 100644
--- a/dlls/setupapi/tests/devinst.c
+++ b/dlls/setupapi/tests/devinst.c
@@ -1948,9 +1948,11 @@ static void test_device_key(void)
 
     SetLastError(0xdeadbeef);
     key = SetupDiOpenDevRegKey(set, &device, DICS_FLAG_GLOBAL, 0, DIREG_DRV, 0);
+todo_wine {
     ok(key == INVALID_HANDLE_VALUE, "Expected failure.\n");
     ok(GetLastError() == ERROR_INVALID_DATA || GetLastError() == ERROR_ACCESS_DENIED, /* win2k3 */
             "Got unexpected error %#lx.\n", GetLastError());
+}
 
     key = SetupDiOpenDevRegKey(set, &device, DICS_FLAG_GLOBAL, 0, DIREG_DRV, KEY_READ);
     ok(key != INVALID_HANDLE_VALUE, "Failed to open device key, error %#lx.\n", GetLastError());
diff --git a/server/device.c b/server/device.c
index ef3ab50d1e6..72410c2da8b 100644
--- a/server/device.c
+++ b/server/device.c
@@ -1030,7 +1030,7 @@ DECL_HANDLER(get_next_device_request)
 
         if (iosb && iosb->in_size > get_reply_max_size())
             set_error( STATUS_BUFFER_OVERFLOW );
-        else if (!irp->file || (reply->next = alloc_handle_no_access_check( current->process, irp, 0, 0 )))
+        else if (!irp->file || (reply->next = alloc_handle( current->process, irp, 0, 0 )))
         {
             if (fill_irp_params( manager, irp, &reply->params ))
             {
@@ -1168,7 +1168,7 @@ DECL_HANDLER(get_kernel_object_handle)
         return;
 
     if ((ref = kernel_object_from_ptr( manager, req->user_ptr )))
-        reply->handle = alloc_handle_no_access_check( current->process, ref->object, req->access, 0 );
+        reply->handle = alloc_handle( current->process, ref->object, req->access, 0 );
     else
         set_error( STATUS_INVALID_HANDLE );
 
diff --git a/server/handle.c b/server/handle.c
index 58b0fe290d2..436674a69d3 100644
--- a/server/handle.c
+++ b/server/handle.c
@@ -284,13 +284,8 @@ obj_handle_t alloc_handle_no_access_check( struct process *process, void *ptr, u
 obj_handle_t alloc_handle( struct process *process, void *ptr, unsigned int access, unsigned int attr )
 {
     struct object *obj = ptr;
-
-    if (!(access = obj->ops->map_access( obj, access ) & ~RESERVED_ALL))
-    {
-        set_error( STATUS_ACCESS_DENIED );
-        return 0;
-    }
-    if (!check_object_access( NULL, obj, &access )) return 0;
+    access = obj->ops->map_access( obj, access ) & ~RESERVED_ALL;
+    if (access && !check_object_access( NULL, obj, &access )) return 0;
     return alloc_handle_entry( process, ptr, access, attr );
 }
 
-- 
2.48.1

