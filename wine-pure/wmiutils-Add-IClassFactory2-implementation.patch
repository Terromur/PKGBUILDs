From 814354bfe3e387606640f5a0ec98fcf16269ee70 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Stefan=20Br=C3=BCns?= <stefan.bruens@rwth-aachen.de>
Date: Mon, 13 Jan 2025 00:45:00 +0100
Subject: [PATCH] [wmiutils] Add IClassFactory2 implementation

---
 dlls/wmiutils/main.c | 57 +++++++++++++++++++++++++++++++++-----------
 1 file changed, 43 insertions(+), 14 deletions(-)

diff --git a/dlls/wmiutils/main.c b/dlls/wmiutils/main.c
index 0b3a55b..2b257d2 100644
--- a/dlls/wmiutils/main.c
+++ b/dlls/wmiutils/main.c
@@ -25,6 +25,7 @@
 #include "winuser.h"
 #include "initguid.h"
 #include "objbase.h"
+#include "ocidl.h"
 #include "wbemcli.h"
 #include "wmiutils.h"
 #include "rpcproxy.h"
@@ -38,21 +39,23 @@ typedef HRESULT (*fnCreateInstance)( LPVOID *ppObj );
 
 typedef struct
 {
-    IClassFactory IClassFactory_iface;
+    IClassFactory2 IClassFactory_iface;
     fnCreateInstance pfnCreateInstance;
 } wmiutils_cf;
 
-static inline wmiutils_cf *impl_from_IClassFactory( IClassFactory *iface )
+static inline wmiutils_cf *impl_from_IClassFactory2( IClassFactory2 *iface )
 {
     return CONTAINING_RECORD(iface, wmiutils_cf, IClassFactory_iface);
 }
 
-static HRESULT WINAPI wmiutils_cf_QueryInterface( IClassFactory *iface, REFIID riid, LPVOID *ppobj )
+static HRESULT WINAPI wmiutils_cf_QueryInterface( IClassFactory2 *iface, REFIID riid, LPVOID *ppobj )
 {
+    TRACE("interface %s\n", debugstr_guid(riid));
     if (IsEqualGUID(riid, &IID_IUnknown) ||
-        IsEqualGUID(riid, &IID_IClassFactory))
+        IsEqualGUID(riid, &IID_IClassFactory) ||
+        IsEqualGUID(riid, &IID_IClassFactory2))
     {
-        IClassFactory_AddRef( iface );
+        IClassFactory2_AddRef( iface );
         *ppobj = iface;
         return S_OK;
     }
@@ -60,20 +63,20 @@ static HRESULT WINAPI wmiutils_cf_QueryInterface( IClassFactory *iface, REFIID r
     return E_NOINTERFACE;
 }
 
-static ULONG WINAPI wmiutils_cf_AddRef( IClassFactory *iface )
+static ULONG WINAPI wmiutils_cf_AddRef( IClassFactory2 *iface )
 {
     return 2;
 }
 
-static ULONG WINAPI wmiutils_cf_Release( IClassFactory *iface )
+static ULONG WINAPI wmiutils_cf_Release( IClassFactory2 *iface )
 {
     return 1;
 }
 
-static HRESULT WINAPI wmiutils_cf_CreateInstance( IClassFactory *iface, LPUNKNOWN pOuter,
+static HRESULT WINAPI wmiutils_cf_CreateInstance( IClassFactory2 *iface, LPUNKNOWN pOuter,
                                                   REFIID riid, LPVOID *ppobj )
 {
-    wmiutils_cf *This = impl_from_IClassFactory( iface );
+    wmiutils_cf *This = impl_from_IClassFactory2( iface );
     HRESULT r;
     IUnknown *punk;
 
@@ -93,19 +96,45 @@ static HRESULT WINAPI wmiutils_cf_CreateInstance( IClassFactory *iface, LPUNKNOW
     return r;
 }
 
-static HRESULT WINAPI wmiutils_cf_LockServer( IClassFactory *iface, BOOL dolock )
+static HRESULT WINAPI wmiutils_cf_LockServer( IClassFactory2 *iface, BOOL dolock )
 {
     FIXME("(%p)->(%d)\n", iface, dolock);
     return S_OK;
 }
 
-static const struct IClassFactoryVtbl wmiutils_cf_vtbl =
+static HRESULT WINAPI wmiutils_cf_GetLicInfo( IClassFactory2 *iface, LICINFO *pLicInfo )
+{
+    pLicInfo->fRuntimeKeyAvail = FALSE;
+    pLicInfo->fLicVerified = TRUE;
+    return S_OK;
+}
+
+static HRESULT WINAPI wmiutils_cf_RequestLicKey( IClassFactory2 *iface, DWORD dwReserved,
+                                                 BSTR *pBstrKey )
+{
+    FIXME("%p\n", iface);
+    return E_NOTIMPL;
+}
+
+static HRESULT WINAPI wmiutils_cf_CreateInstanceLic( IClassFactory2 *iface, LPUNKNOWN pOuter,
+                                                     LPUNKNOWN pReserved, REFIID riid,
+                                                     BSTR bstrKey, LPVOID *ppobj )
+{
+    TRACE("%p %s %p\n", pOuter, debugstr_guid(riid), ppobj);
+
+    return wmiutils_cf_CreateInstance(iface, pOuter, riid, ppobj);
+}
+
+static const struct IClassFactory2Vtbl wmiutils_cf_vtbl =
 {
     wmiutils_cf_QueryInterface,
     wmiutils_cf_AddRef,
     wmiutils_cf_Release,
     wmiutils_cf_CreateInstance,
-    wmiutils_cf_LockServer
+    wmiutils_cf_LockServer,
+    wmiutils_cf_GetLicInfo,
+    wmiutils_cf_RequestLicKey,
+    wmiutils_cf_CreateInstanceLic,
 };
 
 static wmiutils_cf status_code_cf = { { &wmiutils_cf_vtbl }, WbemStatusCodeText_create };
@@ -113,7 +142,7 @@ static wmiutils_cf path_cf = { { &wmiutils_cf_vtbl }, WbemPath_create };
 
 HRESULT WINAPI DllGetClassObject( REFCLSID rclsid, REFIID iid, LPVOID *ppv )
 {
-    IClassFactory *cf = NULL;
+    IClassFactory2 *cf = NULL;
 
     TRACE("%s %s %p\n", debugstr_guid(rclsid), debugstr_guid(iid), ppv);
 
@@ -126,5 +155,5 @@ HRESULT WINAPI DllGetClassObject( REFCLSID rclsid, REFIID iid, LPVOID *ppv )
         cf = &path_cf.IClassFactory_iface;
     }
     if (!cf) return CLASS_E_CLASSNOTAVAILABLE;
-    return IClassFactory_QueryInterface( cf, iid, ppv );
+    return IClassFactory2_QueryInterface( cf, iid, ppv );
 }
-- 
2.47.1
