# Maintainer: Vasiliy Stelmachenok <ventureo@cachyos.org>
## Maintainers of original Arch Linux package:
# Maintainer: Sven-Hendrik Haase <sh@lutzhaase.com>
# Contributor: Jan "heftig" Steffens <jan.steffens@gmail.com>
# Contributor: Eduardo Romero <eduardo@archlinux.org>
# Contributor: Giovanni Scafora <giovanni@archlinux.org>

pkgname=wine-staging-ntsync-pure-git
pkgver=10.0rc5.r0.gf6bf4993448
pkgrel=1
source=(
  "git+https://gitlab.winehq.org/wine/wine.git"
  "git+https://gitlab.winehq.org/wine/wine-staging.git"
  30-win32-aliases.conf
  wine-binfmt.conf
  ntsync-v7-10.0-rc1-staging.patch
  wineserver-enable-link-time-optimization.patch
  msvcrt_nativebuiltin.patch
  7064.patch
)
sha512sums=(
  'SKIP'
  'SKIP'
  'SKIP'
  'SKIP'
  'SKIP'
  'SKIP'
  'SKIP'
  'SKIP'
)


pkgdesc="A compatibility layer for running Windows programs"
url="https://www.winehq.org"
arch=(x86_64)
options=(staticlibs !lto)
license=(LGPL-2.1-or-later)
depends=(
  desktop-file-utils
  fontconfig
  freetype2
  gcc-libs
  gettext
  libxcursor
  libxkbcommon
  libxi
  libxrandr
  wayland
  ffmpeg
  unixodbc
)
makedepends=(autoconf bison perl flex mingw-w64-gcc git
  alsa-lib
  gnutls
  gst-plugins-base-libs
  libpulse
  libxcomposite
  mesa
  opencl-headers
  opencl-icd-loader
  sdl2
  vulkan-headers
  vulkan-icd-loader
)
optdepends=(
  alsa-lib
  alsa-plugins
  gnutls
  gst-plugins-bad
  gst-plugins-base
  gst-plugins-base-libs
  gst-plugins-good
  gst-plugins-ugly
  libpulse
  libxcomposite
  opencl-icd-loader
  sdl2
  wine-gecko
  wine-mono
)
provides=("wine-staging" "wine" 'wine-wow64')
conflicts=("wine")
makedepends=(${makedepends[@]} ${depends[@]})
install=wine.install

pkgver() {
  git -C wine describe --long --tags | sed 's/\([^-]*-g\)/r\1/;s/-/./g;s/^wine.//;s/^v//;s/\.rc/rc/'
}

prepare() {
  # Get rid of old build dirs
  rm -rf "$pkgname-build"
  mkdir "$pkgname-build"

  cd wine

  # apply wine-staging patchset (no Esync to prevent conflicts with NTSync)
  ../wine-staging/staging/patchinstall.py --backend=git-apply --all \
    -W eventfd_synchronization \
    -W server-Signal_Thread \
    -W server-PeekMessage \
    -W ntdll-Syscall_Emulation

  # NTSync for Wine 10.0-rc1
  patch -Np1 -i "${srcdir}/ntsync-v7-10.0-rc1-staging.patch"

  # LTO for Wineserver
  patch -Np1 -i "${srcdir}/wineserver-enable-link-time-optimization.patch"

  # Use native Visual C++ DLLs
  patch -Np1 -i "${srcdir}/msvcrt_nativebuiltin.patch"

  # Fixes crashes in many games in new WoW64 mode
  # https://bugs.winehq.org/show_bug.cgi?id=57444
  patch -Np1 -i "${srcdir}/7064.patch"
}


# Флаги которые можно ещё добавить, но они экспериментальные.
# Для CFLAGS можно добавить --functions=32 -Wl,-z,max-page-size=0x4000 -ftree-vectorize
# Для CXXFLAGS можно добавить -falign-functions=32 для старых процессоров и -falign-functions=64 для современных
# Для CROSSCFLAGS можно добавить -ftree-vectorize
# -falign-functions=32 для старых процессоров. -falign-functions=64 и -ftree-vectorize зависит от того, используется более современный процессор, если слишком старый процессор и не имеет никаких инструкций, не стоит включать 
# -Wl,-z,max-page-size=0x4000 для CFLAGS подойдёт для Intel процессоров
build() {
  export CFLAGS="-O3 -march=native -mtune=native -fipa-pta -fno-math-errno -flive-range-shrinkage -fno-trapping-math -mtls-dialect=gnu2 -feliminate-unused-debug-types -floop-nest-optimize -fgraphite-identity -fdata-sections -ffunction-sections -fdevirtualize-at-ltrans -fcf-protection=none -fno-semantic-interposition -mharden-sls=none -fivopts -fmodulo-sched"
  export CXXFLAGS="$CFLAGS -Wp,-U_GLIBCXX_ASSERTIONS"
  export LDFLAGS="-Wl,-O3,--as-needed,-Bsymbolic-functions,--sort-common,-flto=auto -Wl,--gc-sections"

  CFLAGS+=" -std=gnu2x"
  CXXFLAGS+=" -std=gnu++2a"

  export CROSSCFLAGS="$CFLAGS"
  export CROSSCXXFLAGS="$CXXFLAGS"
  export CROSSLDFLAGS="-Wl,-O3,--as-needed,-Bsymbolic-functions,--sort-common,-flto=auto -Wl,--file-alignment,4096"

  echo "Building Wine..."
  cd "$pkgname-build"
  ../wine/configure \
    --disable-tests \
    --prefix=/usr \
    --libdir=/usr/lib \
    --with-x \
    --with-wayland \
    --with-gstreamer \
    --with-ffmpeg \
    --without-sane \
    --without-v4l2 \
    --without-cups \
    --without-gphoto \
    --without-xinerama \
    --without-pcsclite \
    --without-xxf86vm \
    --without-pcap \
    --enable-archs=x86_64,i386

  make
}

package() {
  cd "$pkgname-build"
  make prefix="$pkgdir/usr" \
    libdir="$pkgdir/usr/lib" \
    dlldir="$pkgdir/usr/lib/wine" install

  # Strip Windows binaries
  i686-w64-mingw32-strip --strip-debug "$pkgdir"/usr/lib/wine/i386-windows/*.dll
  x86_64-w64-mingw32-strip --strip-debug "$pkgdir"/usr/lib/wine/x86_64-windows/*.dll

  # Font aliasing settings for Win32 applications
  install -d "$pkgdir"/usr/share/fontconfig/conf.{avail,default}
  install -m644 "$srcdir/30-win32-aliases.conf" "$pkgdir/usr/share/fontconfig/conf.avail"
  ln -s ../conf.avail/30-win32-aliases.conf "$pkgdir/usr/share/fontconfig/conf.default/30-win32-aliases.conf"
  install -Dm 644 "$srcdir/wine-binfmt.conf" "$pkgdir/usr/lib/binfmt.d/wine.conf"
}

# vim:set ts=8 sts=2 sw=2 et:
