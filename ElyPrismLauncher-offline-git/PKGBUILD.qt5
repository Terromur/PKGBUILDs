# Maintainer: Terromur <terromuroz@proton.me>

pkgname=ElyPrismLauncher-offline-qt5-git
_pkgname=${pkgname%-offline-qt5-git}
pkgver=9.2.r1.g05f529b39
pkgrel=1
pkgdesc='This fork of Prism Launcher adds integrated support for Ely.by accounts and offline support playing, qt5 version'
arch=(i686 x86_64 aarch64)
url='https://prismlauncher.org'
license=('GPL-3.0-only AND LGPL-3.0-or-later AND LGPL-2.0-or-later AND Apache-2.0 AND MIT AND LicenseRef-Batch AND OFL-1.1')
depends=(
  cmark
  gcc-libs
  glibc
  hicolor-icon-theme
  java-runtime=17
  libgl
  qt6-5compat
  qt6-base
  qt6-imageformats
  qt6-networkauth
  qt6-svg
  quazip-qt6
  tomlplusplus
  zlib
)
provides=('ElyPrismLauncher')
conflicts=('prismlauncher')
makedepends=(
  cmake
  extra-cmake-modules
  gamemode
  ghc-filesystem
  git
  jdk17-openjdk
  scdoc
  ninja
)
optdepends=(
  'glfw: to use system GLFW libraries'
  'openal: to use system OpenAL libraries'
  'visualvm: Profiling support'
  'xorg-xrandr: for older minecraft versions'
  'java-runtime=8: for older minecraft versions'
  'flite: minecraft voice narration'
)
source=(
  'git+https://github.com/ElyPrismLauncher/ElyPrismLauncher.git'
  'git+https://github.com/PrismLauncher/libnbtplusplus.git'
  '0001-Remove-DRM.patch'
)
sha256sums=('SKIP'
            'SKIP'
            'SKIP')

pkgver() {
  cd "ElyPrismLauncher"

  git describe --long --tags | sed 's/\([^-]*-g\)/r\1/;s/-/./g'
}

prepare() {
  cd "ElyPrismLauncher"

  git submodule init
  git config submodule.libraries/cmark.active false
  git config submodule.libraries/extra-cmake-modules.active false
  git config submodule.libraries/filesystem.active false
  git config submodule.libraries/libnbtplusplus.url "${srcdir}/libnbtplusplus"
  git config submodule.libraries/quazip.active false
  git config submodule.libraries/tomlplusplus.active false
  git config submodule.libraries/zlib.active false
  git -c protocol.file.allow=always submodule update --init --recursive
  
 patch -Np1 -i  ../0001-Remove-DRM.patch  
}

build() {
  cmake -S ElyPrismLauncher -B build -G Ninja \
    -DCMAKE_BUILD_TYPE='Release' \
    -DCMAKE_INSTALL_PREFIX='/usr' \
    -DLauncher_BUILD_PLATFORM="archlinux" \
    -DLauncher_APP_BINARY_NAME="${_pkgname}" \
    -DENABLE_LTO=ON \
    -DLauncher_QT_VERSION_MAJOR="5" \
    -Wno-dev
  cmake --build build
}

package() {
  DESTDIR="${pkgdir}" cmake --install build
}
