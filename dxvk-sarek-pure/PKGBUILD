# Maintainer: Terromur <terromuroz@proton.me>
pkgname=dxvk-sarek-pure
pkgver=1.10.6
pkgrel=1
pkgdesc="DXVK with Sarek patches for Proton"
arch=('x86_64')
url="https://github.com/pythonlover02/DXVK-Sarek"
license=('zlib/libpng')
depends=('vulkan-icd-loader')
provides=('dxvk' 'd9vk' "dxvk=$pkgver")
conflicts=('d9vk'  "dxvk" 'dxvk-bin')
makedepends=('ninja' 'meson>=0.43' 'glslang' 'mingw-w64-gcc-pure' 'git')
source=(
    "git+https://github.com/pythonlover02/DXVK-Sarek.git#branch=1.10.x-Proton-Sarek"
    "dxvk-extraopts.patch"
)
md5sums=(
    'SKIP'
    'SKIP'
)
prepare() {
    cd "$srcdir"
    cd DXVK-Sarek
    git submodule update --init --recursive
    
    # Patch to passthrough compiler flags (thanks @loathingkernel)
    patch -p1 -i "$srcdir/dxvk-extraopts.patch"
    
    # By default export FLAGS used by proton and ignore makepkg
    # This overrides FLAGS from makepkg.conf, if you comment these you are on your own
    # If you want the "best" possible optimizations for your system you can use
    # `-march=native` and remove the `-mtune=core-avx2` option.
    # Thanks for flags ms178 https://github.com/ms178/archpkgbuilds/blob/main/packages/dxvk-mingw-git/PKGBUILD

    # Так же вы можете добавить в CFLAGS флаг -D_WIN32_WINNT=0xA00. Он используется тогда, когда вам ничего не нужно, кроме совместимости Windows 10
    export CFLAGS="-O3 -march=native -mtune=native -fipa-pta -flive-range-shrinkage -fno-math-errno -fno-trapping-math -mtls-dialect=gnu2 -feliminate-unused-debug-types -floop-nest-optimize -fgraphite-identity -flto=auto -fdata-sections -ffunction-sections -fdevirtualize-at-ltrans -fcf-protection=none -fno-semantic-interposition -fivopts -fmodulo-sched"
    export CXXFLAGS="$CFLAGS"
    export LDFLAGS="-Wl,-O3,--as-needed,-Bsymbolic-functions,--sort-common,-flto=auto -Wl,--gc-sections"

    # These flags are taken from Proton
    CFLAGS+=" -mfpmath=sse -fwrapv -fno-strict-aliasing -std=gnu2x"
    CXXFLAGS+=" -mfpmath=sse -fwrapv -fno-strict-aliasing -std=gnu++2a"
    LDFLAGS+=" -Wl,--file-alignment,4096"

    local cross_ldflags="$LDFLAGS"

    local cross_cflags="$CFLAGS -mcmodel=small"
    local cross_cxxflags="$CXXFLAGS -mcmodel=small"

    sed -i build-win64.txt \
        -e "s|@CARGS@|\'${cross_cflags// /\',\'}\'|g" \
        -e "s|@CXXARGS@|\'${cross_cxxflags// /\',\'}\'|g" \
        -e "s|@LDARGS@|\'${cross_ldflags// /\',\'}\'|g"
    local cross_cflags="$CFLAGS -mstackrealign -mpreferred-stack-boundary=2"
    local cross_cxxflags="$CXXFLAGS -mstackrealign -mpreferred-stack-boundary=2"
    sed -i build-win32.txt \
        -e "s|@CARGS@|\'${cross_cflags// /\',\'}\'|g" \
        -e "s|@CXXARGS@|\'${cross_cxxflags// /\',\'}\'|g" \
        -e "s|@LDARGS@|\'${cross_ldflags// /\',\'}\'|g"
}

build() {
    cd "$srcdir/DXVK-Sarek"
    meson setup "build/x64" \
        --cross-file build-win64.txt \
        --prefix "/usr/share/dxvk/x64" \
        --bindir "" --libdir "" \
        --buildtype "release" \
        --strip
    ninja -C "build/x64" -v

    meson setup "build/x32" \
        --cross-file build-win32.txt \
        --prefix "/usr/share/dxvk/x32" \
        --bindir "" --libdir "" \
        --buildtype "release" \
        --strip
    ninja -C "build/x32" -v
}

package() {
    cd "$srcdir/DXVK-Sarek"
    DESTDIR="$pkgdir" ninja -C "build/x32" install
    DESTDIR="$pkgdir" ninja -C "build/x64" install
    install -Dm 644 -t "$pkgdir/usr/share/licenses/$pkgname" LICENSE
}
