# Maintainer: Terromur <terromuroz@proton.me>
# Maintainer: Vasiliy Stelmachenok <ventureo@yandex.ru>
## AUR package maintainer:
# Maintainer: Adrià Cereto i Massagué <ssorgatem at gmail.com>

pkgname=dxvk-pure-git
pkgver=2.5.3.r219.gfcbdff3b7
pkgrel=1
pkgdesc="A Vulkan-based compatibility layer for Direct3D 9/10/11 which allows running 3D applications on Linux using Wine. Windows DLL version)"
arch=('x86_64')
url="https://github.com/doitsujin/dxvk"
license=('zlib/libpng')
depends=('vulkan-icd-loader')
provides=('dxvk' 'd9vk' "dxvk=$pkgver")
conflicts=('d9vk'  "dxvk" 'dxvk-bin' 'dxvk-pure-clang-git')
makedepends=('ninja' 'meson>=0.43' 'glslang' 'mingw-w64-gcc' 'git')
options=(!strip !buildflags !staticlibs)
source=(
    "git+https://github.com/doitsujin/dxvk.git"
    "git+https://github.com/Joshua-Ashton/mingw-directx-headers.git"
    "git+https://github.com/KhronosGroup/Vulkan-Headers.git"
    "git+https://github.com/KhronosGroup/SPIRV-Headers.git"
    "dxvk-extraopts.patch"
    "fixLockRectd3d9.patch"
    "global-dxvk.conf.patch"
    "dxvk-gplasync-master.patch"
    "update-spirv-version-to-1.6.patch"
    "fix-nvidia.patch"
)
sha256sums=(
    "SKIP"
    "SKIP"
    "SKIP"
    "SKIP"
    "bcc15521e4c7f966a0192a1dabb7fb4935b33db39344ab5b861f9d81486f1362"
    "SKIP"
    "SKIP"
    "SKIP"
    "SKIP"
    "SKIP"
)


pkgver() {
    cd dxvk
    git describe --long --tags | sed 's/\([^-]*-g\)/r\1/;s/-/./g;s/v//g'
}

prepare() {
    cd dxvk

    # Explicitly set origin URL for submodules using relative paths
    git remote set-url origin https://github.com/doitsujin/dxvk.git
    git submodule update --init --filter=tree:0 --recursive

    # Uncomment to enable extra optimizations
    # Patch crossfiles with extra optimizations from makepkg.conf
    patch -p1 -i "$srcdir"/dxvk-extraopts.patch

    # Исправление back buffers для d3d9
    patch -p1 -i "$srcdir"/fixLockRectd3d9.patch
    
    # Работа с dxvk.conf в пользовательской директории
    patch -p1 -i "$srcdir"/global-dxvk.conf.patch
    
    # Добавление gplasync
    patch -p1 -i "$srcdir"/dxvk-gplasync-master.patch
    
    # Обновление spirv
    patch -p1 -i "$srcdir"/update-spirv-version-to-1.6.patch

    # Исправление зависания изображения на NVIDIA+Wayland
    patch -p1 -i "$srcdir"/fix-nvidia.patch

    # Так же вы можете добавить в CFLAGS флаг -D_WIN32_WINNT=0xA00. Он используется тогда, когда вам ничего не нужно, кроме совместимости Windows 10
    # Так же вы можете добавить в CFLAGS флаг -mprefer-avx128. Он нужен в том случае, когда возникают проблемы с запуском игр. Если вы собрали мой mingw-w64-gcc - вам этот флаг не нужен.
    export CFLAGS="-march=native -mtune=native -O3 -fdata-sections -fno-unwind-tables -fomit-frame-pointer -funsafe-math-optimizations -fno-ident -fno-stack-protector -pthread -fopenmp -fno-math-errno -fno-trapping-math -fno-semantic-interposition -fcf-protection=none -fivopts -ffunction-sections -fprofile-correction -floop-nest-optimize -fipa-pta -fgraphite-identity -floop-strip-mine -fmodulo-sched -flive-range-shrinkage -mharden-sls=none"
    export CXXFLAGS="$CFLAGS -Wp,-U_GLIBCXX_ASSERTIONS"
    export LDFLAGS="-Wl,-O3 -Wl,-Bsymbolic-functions,--sort-common,--as-needed,--strip-all -flto=auto -lpthread -flto=jobserver -Wl,-z,pack-relative-relocs -Wl,--gc-sections"
    # These flags are taken from Proton
    CFLAGS+=" -mfpmath=sse -std=gnu23"
    CXXFLAGS+=" -mfpmath=sse -std=gnu++23"

    # If using -march=native and the CPU supports AVX, launching a d3d9
    # game can cause an Unhandled exception. The cause seems to be the
    # combination of AVX instructions and tree vectorization (implied by O3),
    # all tested archictures from sandybridge to haswell are affected.
    # Disabling AVX (and AVX2 as a side-effect).
    # Since Wine 5.16 AVX is supported. Testing showed 32bit applications
    # crashing with AVX regardless, but 64bit applications worked just fine.
    # So disable AVX only for the 32bit binaries and AVX2 for the 64bit.
    # AVX2 seems to degrade performance. So disregard the above.
    # Relevant Wine issues
    # https://bugs.winehq.org/show_bug.cgi?id=45289
    # https://bugs.winehq.org/show_bug.cgi?id=43516
    #CFLAGS+=" -mno-avx2"
    #CXXFLAGS+=" -mno-avx2"

    local cross_ldflags="-Wl,-O3 -Wl,--sort-common,--as-needed,--strip-all -flto=auto -lpthread -flto=jobserver -Wl,--gc-sections -Wl,--file-alignment,4096"

    local cross_cflags="$CFLAGS -mcmodel=small"
    local cross_cxxflags="$CXXFLAGS -mcmodel=small"
    sed -i build-win64.txt \
        -e "s|@CARGS@|\'${cross_cflags// /\',\'}\'|g" \
        -e "s|@CXXARGS@|\'${cross_cxxflags// /\',\'}\'|g" \
        -e "s|@LDARGS@|\'${cross_ldflags// /\',\'}\'|g"
    local cross_cflags="$CFLAGS"
    local cross_cxxflags="$CXXFLAGS"
    sed -i build-win32.txt \
        -e "s|@CARGS@|\'${cross_cflags// /\',\'}\'|g" \
        -e "s|@CXXARGS@|\'${cross_cxxflags// /\',\'}\'|g" \
        -e "s|@LDARGS@|\'${cross_ldflags// /\',\'}\'|g"
}

build() {
    meson setup dxvk "build/x64" \
        --cross-file dxvk/build-win64.txt \
        --prefix "/usr/share/dxvk/x64" \
        --bindir "" --libdir "" \
        --buildtype "release" \
        --strip \
        -Db_lto=true
    ninja -C "build/x64" -v

    meson setup dxvk "build/x32" \
        --cross-file dxvk/build-win32.txt \
        --prefix "/usr/share/dxvk/x32" \
        --bindir "" --libdir "" \
        --buildtype "release" \
        --strip \
        -Db_lto=true
    ninja -C "build/x32" -v
}

package() {
     DESTDIR="$pkgdir" ninja -C "build/x32" install
     DESTDIR="$pkgdir" ninja -C "build/x64" install
     install -Dm 644 -t "$pkgdir/usr/share/licenses/$pkgname" dxvk/LICENSE
}
