SERVICES=("ananicy-cpp" "systemd-resolved")

post_install() {
    echo "Enabling services..."
    for service in "${SERVICES[@]}"; do
        systemctl enable "$service"
    done

    # Настройка kernel.shmmax и kernel.shmall
    echo "Configuring kernel.shmmax and kernel.shmall..."
    TOTAL_RAM=$(grep MemTotal /proc/meminfo | awk '{print $2 * 1024}')
    PAGE_SIZE=$(getconf PAGESIZE)
    SHMMAX=$TOTAL_RAM
    SHMALL=$((TOTAL_RAM / PAGE_SIZE))

    # Применение параметров
    sysctl -w kernel.shmmax=$SHMMAX
    sysctl -w kernel.shmall=$SHMALL

    # Сохранение параметров для применения после перезагрузки
    echo "kernel.shmmax = $SHMMAX" > /usr/lib/sysctl.d/99-shm.conf
    echo "kernel.shmall = $SHMALL" >> /usr/lib/sysctl.d/99-shm.conf

    # Настройка vm.min_free_kbytes
    echo "Configuring vm.min_free_kbytes..."
    TOTAL_RAM_KB=$(grep MemTotal /proc/meminfo | awk '{print $2}')
    MIN_FREE_KBYTES=$(echo "scale=2; sqrt($TOTAL_RAM_KB) * 16" | bc | awk '{print int($1)}')

    # Применение параметра
    sysctl -w vm.min_free_kbytes=$MIN_FREE_KBYTES

    # Сохранение параметра для применения после перезагрузки
    echo "vm.min_free_kbytes = $MIN_FREE_KBYTES" >> /usr/lib/sysctl.d/99-shm.conf

    # Настройка параметров сети
    echo "Измерение RTT..."
    RTT_MS=$(measure_rtt)
    echo "Измеренный RTT: $RTT_MS мс"

    echo "Оценка скорости интернета..."
    LINK_SPEED_MBPS=$(estimate_speed)
    echo "Предполагаемая скорость интернета: $LINK_SPEED_MBPS Mbps"

    echo "Расчет размера буфера..."
    BUFFER_SIZE=$(calculate_buffer_size $LINK_SPEED_MBPS $RTT_MS)
    echo "Рассчитанный размер буфера: $BUFFER_SIZE байт"

    echo "Обновление настроек sysctl..."
    update_sysctl $BUFFER_SIZE

    echo "Kernel parameters configured successfully."
}

post_upgrade() {
    echo "Enabling services..."

    for service in "${SERVICES[@]}"; do
        if systemctl is-active "$service" >/dev/null; then
            systemctl restart "$service"
        fi
    done

    # Enable systemd-resolved only once for the upcoming upgrade
    systemctl enable systemd-resolved

    # Настройка kernel.shmmax и kernel.shmall (повторно, на случай обновления)
    echo "Reconfiguring kernel.shmmax and kernel.shmall..."
    TOTAL_RAM=$(grep MemTotal /proc/meminfo | awk '{print $2 * 1024}')
    PAGE_SIZE=$(getconf PAGESIZE)
    SHMMAX=$TOTAL_RAM
    SHMALL=$((TOTAL_RAM / PAGE_SIZE))

    # Применение параметров
    sysctl -w kernel.shmmax=$SHMMAX
    sysctl -w kernel.shmall=$SHMALL

    # Сохранение параметров для применения после перезагрузки
    echo "kernel.shmmax = $SHMMAX" > /usr/lib/sysctl.d/99-shm.conf
    echo "kernel.shmall = $SHMALL" >> /usr/lib/sysctl.d/99-shm.conf

    # Настройка vm.min_free_kbytes (повторно, на случай обновления)
    echo "Reconfiguring vm.min_free_kbytes..."
    TOTAL_RAM_KB=$(grep MemTotal /proc/meminfo | awk '{print $2}')
    MIN_FREE_KBYTES=$(echo "scale=2; sqrt($TOTAL_RAM_KB) * 16" | bc | awk '{print int($1)}')

    # Применение параметра
    sysctl -w vm.min_free_kbytes=$MIN_FREE_KBYTES

    # Сохранение параметра для применения после перезагрузки
    echo "vm.min_free_kbytes = $MIN_FREE_KBYTES" >> /usr/lib/sysctl.d/99-shm.conf

    echo "Kernel parameters reconfigured successfully."
}
